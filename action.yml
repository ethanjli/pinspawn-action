name: "Run PiNspawn"
author: ethanjli
description: Uses `systemd-nspawn` to run commands in a (un)booted container on a Raspberry Pi SD card image.
branding:
  icon: external-link
  color: red

inputs:
  image:
    description: Path of the image for the container
    required: true
  args:
    description: Options, args, and/or a command to pass to `systemd-nspawn`
    required: false
  shell:
    description: The shell to use for running commands.
    required: false
  run:
    description: Commands to run in the shell.
    required: false
  user:
    description: The user to run commands as.
    required: false
    default: root
  boot:
    description: Boot the image's init program as PID 1.
    required: false
    default: false
  run-service:
    description:
      The systemd service to use for running `shell` with the `run` commands if the image's init
      program is booted.
    required: false

runs:
  using: composite
  steps:
    - name: Install dependencies for PiNspwan
      shell: bash
      run: |
        is_installed() {
          apt-cache policy "$1" | grep 'Installed:' | grep -v '(none)' > /dev/null
        }

        packages=""
        if ! is_installed systemd-container; then
          packages="$packages systemd-container"
        fi
        if ! is_installed qemu-user-static; then
          packages="$packages qemu-user-static"
        fi
        if ! is_installed binfmt-support; then
          packages="$packages binfmt-support"
        fi
        if [ ! -z "$(echo "$packages")" ]; then
          echo "Installing dependencies to run systemd-nspawn on non-amd64 images..."
          sudo apt-get update -o Dpkg::Progress-Fancy=0
          sudo apt-get install -o Dpkg::Progress-Fancy=0 $packages
        fi

    - name: Run PiNspawn
      id: run-pinspawn
      shell: bash
      env:
        INPUT_IMAGE: ${{ inputs.image }}
        INPUT_ARGS: ${{ inputs.args }}
        INPUT_SHELL: ${{ inputs.shell }}
        INPUT_RUN: ${{ inputs.run }}
        INPUT_USER: ${{ inputs.user }}
        INPUT_BOOT: ${{ inputs.boot }}
        INPUT_RUN_SERVICE: ${{ inputs.run-service }}
      run: |
        ${{ github.action_path }}/gha-wrapper-pinspawn.sh
