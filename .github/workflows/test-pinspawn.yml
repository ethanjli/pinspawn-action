name: build-os
on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
  push:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
  merge_group:
  workflow_dispatch:

jobs:
  build:
    name: Test containers
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download and cache base image
        id: download-base
        uses: valadaptive/download-file-action@v0.1.0
        with:
          url: https://downloads.raspberrypi.com/raspios_lite_arm64/images/raspios_lite_arm64-2024-03-15/2024-03-15-raspios-bookworm-arm64-lite.img.xz
          destination: /tmp/2024-03-15-raspios-bookworm-arm64-lite.img.xz

      - name: Grow the image
        id: grow-image
        uses: ethanjli/pigrow-action@v0.1.0
        with:
          image: /tmp/2024-03-15-raspios-bookworm-arm64-lite.img.xz
          destination: rpi-os-image.img
          mode: to
          size: 8G

      # Run shell commands

      - name: Install and run cowsay
        uses: ./
        with:
          image: rpi-os-image.img
          run: |
            apt-get update
            apt-get install -y cowsay
            /usr/games/cowsay 'I am running in a light-weight namespace container!'

      # Run shell commands in a specific shell

      - name: Run in Python
        uses: ./
        with:
          image: rpi-os-image.img
          shell: python
          run: |
            import platform

            for word in reversed(['!', platform.python_version(), 'Python', 'in', 'running', 'am', 'I']):
              print(word, end=' ')

      # Run shell commands as the pi user

      - name: Run without root permissions
        uses: ./
        with:
          image: rpi-os-image.img
          shell: su - pi bash -e {0}
          run: |
            sudo apt-get update
            sudo apt-get install -y figlet
            figlet "I am $USER!"

      # Run a specific command without a shell

      - name: Print shell
        uses: ./
        with:
          image: rpi-os-image.img
          shell: echo "This variable won't be replaced because there's no shell: $SHELL"

      # Run shell commands with one or more bind mounts from the host OS

      - name: Make a bootloader configuration snippet
        uses: 1arp/create-a-file-action@0.4.5
        with:
          file: boot-config.snippet
          content: |
            # Enable support for the RV3028 RTC
            dtoverlay=i2c-rtc,rv3028,trickle-resistor-ohms=3000,backup-switchover-mode=1

      - name: Modify bootloader configuration
        uses: ./
        with:
          image: rpi-os-image.img
          args: --bind ./:/run/external
          run: |
            cat /run/external/boot-config.snippet >> /boot/config.txt
            cp /boot/config.txt /run/external/boot.config

      - name: Print the bootloader config
        run: cat boot.config

      # Run shell commands in a booted container

      - name: Analyze systemd boot process
        uses: ./
        with:
          image: rpi-os-image.img
          args: --bind ./:/run/external
          boot: true
          run: |
            systemd-analyze blame
            systemd-analyze plot > /run/external/bootup-timeline.svg

      - name: Upload the bootup timeline to Job Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bootup-timeline
          path: bootup-timeline.svg
          if-no-files-found: error
          overwrite: true

      - name: Fail during boot
        uses: ./
        with:
          image: rpi-os-image.img
          boot: true
          run: |
            exit 42
